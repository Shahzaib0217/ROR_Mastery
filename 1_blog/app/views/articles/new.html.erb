<h1>Create New Form</h1>

<% if @article.errors.any? %> 
  <h2>The following errors prevented the article from being saved</h2> 
  <ul> 
    <% @article.errors.full_messages.each do |msg| %> 
      <li><%= msg %></li> 
    <% end %> 
  </ul>
<% end %>

  <%# 
  `form_with` is a Rails helper method used to generate a form tag. It is highly customizable and works well for both object-oriented and non-object-oriented forms.
  %>

  <%# 
  `scope: :article` 
  - This sets the form's `name` attribute to `article` and prefixes input field names with `article`. 
  - For example, it generates `name="article[attribute_name]"` for input fields.
  %>

  <%# 
  `url: articles_path` 
  - Specifies the form's submission endpoint (where the form data will be sent).
  - `articles_path` is a Rails route helper that resolves to the URL for the `index` action or a `POST` request to create a new article.
  %>

  <%# 
  `local: true` 
  - Ensures the form uses standard HTML form submission (a full-page HTTP request) instead of making an AJAX request.
  - If set to `false` (default behavior), the form submission would use JavaScript for asynchronous requests.
  %>

<%= form_with scope: :article, url: articles_path, local: true do |f| %>
  <p> 
    <%= f.label :title %><br/> 
    <%= f.text_field :title %>
  </p>
  <p>
    <%= f.label :description %><br/> 
    <%= f.text_area :description %> 
  </p>
    <p>
    <%= f.label :author %><br/> 
    <%= f.text_area :author %> 
  </p>
  <p>
    <%= f.submit %> 
  </p>
<% end %>

<%= link_to 'Return to articles listing', articles_path %>